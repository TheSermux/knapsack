Для понимания того, как мы можем взломать криптосистему Меркля-Хеллмана с рюкзачным шифром, сначала нам нужно понять, что такое решётки (обратите внимание, что для понимания потребуется некоторое элементарное знание линейной алгебры).

Мы можем определить решётку L как ℤ-линейную оболочку набора из n линейно независимых векторов. Или, проще говоря:

L = {a1v1+a2v2+...+anvn, где ai ∈ ℤ}
Векторы v1,...,vn образуют базис L.
Теперь давайте проанализируем, как мы можем связать это с взломом рюкзачного шифра Меркля-Хеллмана.

Предположим, у вас есть матрица X размером 1xN и матрица Y размером 1x1, и вы хотите найти матрицу решения S размером Nx1 для матричного уравнения: XS = Y, где элементы S могут быть только 0 или 1 (в контексте рюкзачного шифра Меркля-Хеллмана, S было бы открытым текстом, который атакующий пытается определить).

Обратите внимание, что если S - это решение матричного уравнения XS = Y, то матричное уравнение MK = C также будет верным.

Теперь рассмотрим m1, m2, ..., mn как столбцы M. Мы можем записать C как C = K1,1m1 + K2,1m2 + ... + Kn,1mn. Это означает, что C фактически является решёткой, охваченной столбцами M.

Теперь еще раз обратим внимание, что поскольку элементы C могут быть только 0 или 1, евклидова длина вектора C будет довольно короткой:

‖ C ‖ = sqrt(S12,S22...Sn2) <= sqrt(n)

И если бы мы рассчитали C, то мы бы также знали S, другими словами, мы бы знали бинарную форму открытого текста.

Вот где на сцену выходит алгоритм LLL (созданный Арьеном Ленстрой, Гендриком Ленстрой и Ласло Ловасом). При наличии базиса для решётки на входе этот алгоритм вычисляет уменьшенный базис (базис с короткими и близкими к ортогональным векторам) той же решётки.

Если мы используем матрицу M в качестве входных данных, алгоритм LLL выдаст короткие векторы в решётке, охваченной столбцами M, что означает (хотя это не гарантировано), что существует достаточно хороший шанс найти C среди этих векторов.
